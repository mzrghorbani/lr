// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module countLayersAll (
        ap_clk,
        ap_rst,
        stubs_0_layer_V_read,
        stubs_1_layer_V_read,
        stubs_2_layer_V_read,
        stubs_3_layer_V_read,
        stubs_4_layer_V_read,
        stubs_5_layer_V_read,
        stubs_6_layer_V_read,
        stubs_0_valid_V_read,
        stubs_1_valid_V_read,
        stubs_2_valid_V_read,
        stubs_3_valid_V_read,
        stubs_4_valid_V_read,
        stubs_5_valid_V_read,
        stubs_6_valid_V_read,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [2:0] stubs_0_layer_V_read;
input  [2:0] stubs_1_layer_V_read;
input  [2:0] stubs_2_layer_V_read;
input  [2:0] stubs_3_layer_V_read;
input  [2:0] stubs_4_layer_V_read;
input  [2:0] stubs_5_layer_V_read;
input  [2:0] stubs_6_layer_V_read;
input  [0:0] stubs_0_valid_V_read;
input  [0:0] stubs_1_valid_V_read;
input  [0:0] stubs_2_valid_V_read;
input  [0:0] stubs_3_valid_V_read;
input  [0:0] stubs_4_valid_V_read;
input  [0:0] stubs_5_valid_V_read;
input  [0:0] stubs_6_valid_V_read;
output  [2:0] ap_return;
input   ap_ce;

reg[2:0] ap_return;

wire   [0:0] or_ln321_46_fu_1406_p2;
reg   [0:0] or_ln321_46_reg_1775;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] or_ln321_46_reg_1775_pp0_iter1_reg;
wire   [0:0] or_ln321_52_fu_1460_p2;
reg   [0:0] or_ln321_52_reg_1780;
wire   [0:0] or_ln321_58_fu_1514_p2;
reg   [0:0] or_ln321_58_reg_1785;
wire   [0:0] or_ln321_64_fu_1562_p2;
reg   [0:0] or_ln321_64_reg_1790;
wire   [1:0] select_ln125_1_fu_1714_p3;
reg   [1:0] select_ln125_1_reg_1795;
wire   [2:0] select_ln125_4_fu_1757_p3;
reg   [2:0] select_ln125_4_reg_1800;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln321_42_fu_140_p2;
wire   [0:0] icmp_ln321_43_fu_152_p2;
wire   [0:0] and_ln321_133_fu_158_p2;
wire   [0:0] icmp_ln321_44_fu_170_p2;
wire   [0:0] and_ln321_134_fu_176_p2;
wire   [0:0] icmp_ln321_45_fu_188_p2;
wire   [0:0] and_ln321_135_fu_194_p2;
wire   [0:0] icmp_ln321_46_fu_206_p2;
wire   [0:0] and_ln321_136_fu_212_p2;
wire   [0:0] and_ln321_fu_146_p2;
wire   [0:0] xor_ln321_45_fu_224_p2;
wire   [0:0] icmp_ln321_fu_134_p2;
wire   [0:0] xor_ln321_fu_164_p2;
wire   [0:0] xor_ln321_42_fu_182_p2;
wire   [0:0] xor_ln321_43_fu_200_p2;
wire   [0:0] xor_ln321_44_fu_218_p2;
wire   [0:0] and_ln321_139_fu_242_p2;
wire   [0:0] and_ln321_138_fu_236_p2;
wire   [0:0] and_ln321_140_fu_248_p2;
wire   [0:0] and_ln321_137_fu_230_p2;
wire   [0:0] icmp_ln321_47_fu_260_p2;
wire   [0:0] and_ln321_142_fu_266_p2;
wire   [0:0] and_ln321_145_fu_284_p2;
wire   [0:0] and_ln321_144_fu_278_p2;
wire   [0:0] and_ln321_147_fu_296_p2;
wire   [0:0] icmp_ln321_49_fu_326_p2;
wire   [0:0] icmp_ln321_50_fu_338_p2;
wire   [0:0] and_ln321_152_fu_344_p2;
wire   [0:0] icmp_ln321_51_fu_356_p2;
wire   [0:0] and_ln321_153_fu_362_p2;
wire   [0:0] icmp_ln321_52_fu_374_p2;
wire   [0:0] and_ln321_154_fu_380_p2;
wire   [0:0] icmp_ln321_53_fu_392_p2;
wire   [0:0] and_ln321_155_fu_398_p2;
wire   [0:0] and_ln321_151_fu_332_p2;
wire   [0:0] xor_ln321_50_fu_410_p2;
wire   [0:0] icmp_ln321_48_fu_320_p2;
wire   [0:0] xor_ln321_46_fu_350_p2;
wire   [0:0] xor_ln321_47_fu_368_p2;
wire   [0:0] xor_ln321_48_fu_386_p2;
wire   [0:0] xor_ln321_49_fu_404_p2;
wire   [0:0] and_ln321_158_fu_428_p2;
wire   [0:0] and_ln321_157_fu_422_p2;
wire   [0:0] and_ln321_159_fu_434_p2;
wire   [0:0] and_ln321_156_fu_416_p2;
wire   [0:0] icmp_ln321_54_fu_446_p2;
wire   [0:0] and_ln321_161_fu_452_p2;
wire   [0:0] and_ln321_164_fu_470_p2;
wire   [0:0] and_ln321_163_fu_464_p2;
wire   [0:0] and_ln321_166_fu_482_p2;
wire   [0:0] icmp_ln321_56_fu_512_p2;
wire   [0:0] icmp_ln321_57_fu_524_p2;
wire   [0:0] and_ln321_171_fu_530_p2;
wire   [0:0] icmp_ln321_58_fu_542_p2;
wire   [0:0] and_ln321_172_fu_548_p2;
wire   [0:0] icmp_ln321_59_fu_560_p2;
wire   [0:0] and_ln321_173_fu_566_p2;
wire   [0:0] icmp_ln321_60_fu_578_p2;
wire   [0:0] and_ln321_174_fu_584_p2;
wire   [0:0] and_ln321_170_fu_518_p2;
wire   [0:0] xor_ln321_55_fu_596_p2;
wire   [0:0] icmp_ln321_55_fu_506_p2;
wire   [0:0] xor_ln321_51_fu_536_p2;
wire   [0:0] xor_ln321_52_fu_554_p2;
wire   [0:0] xor_ln321_53_fu_572_p2;
wire   [0:0] xor_ln321_54_fu_590_p2;
wire   [0:0] and_ln321_177_fu_614_p2;
wire   [0:0] and_ln321_176_fu_608_p2;
wire   [0:0] and_ln321_178_fu_620_p2;
wire   [0:0] and_ln321_175_fu_602_p2;
wire   [0:0] icmp_ln321_61_fu_632_p2;
wire   [0:0] and_ln321_180_fu_638_p2;
wire   [0:0] and_ln321_183_fu_656_p2;
wire   [0:0] and_ln321_182_fu_650_p2;
wire   [0:0] and_ln321_185_fu_668_p2;
wire   [0:0] icmp_ln321_63_fu_698_p2;
wire   [0:0] icmp_ln321_64_fu_710_p2;
wire   [0:0] and_ln321_190_fu_716_p2;
wire   [0:0] icmp_ln321_65_fu_728_p2;
wire   [0:0] and_ln321_191_fu_734_p2;
wire   [0:0] icmp_ln321_66_fu_746_p2;
wire   [0:0] and_ln321_192_fu_752_p2;
wire   [0:0] icmp_ln321_67_fu_764_p2;
wire   [0:0] and_ln321_193_fu_770_p2;
wire   [0:0] and_ln321_189_fu_704_p2;
wire   [0:0] xor_ln321_60_fu_782_p2;
wire   [0:0] icmp_ln321_62_fu_692_p2;
wire   [0:0] xor_ln321_56_fu_722_p2;
wire   [0:0] xor_ln321_57_fu_740_p2;
wire   [0:0] xor_ln321_58_fu_758_p2;
wire   [0:0] xor_ln321_59_fu_776_p2;
wire   [0:0] and_ln321_196_fu_800_p2;
wire   [0:0] and_ln321_195_fu_794_p2;
wire   [0:0] and_ln321_197_fu_806_p2;
wire   [0:0] and_ln321_194_fu_788_p2;
wire   [0:0] icmp_ln321_68_fu_818_p2;
wire   [0:0] and_ln321_199_fu_824_p2;
wire   [0:0] and_ln321_202_fu_842_p2;
wire   [0:0] and_ln321_201_fu_836_p2;
wire   [0:0] and_ln321_204_fu_854_p2;
wire   [0:0] icmp_ln321_70_fu_884_p2;
wire   [0:0] icmp_ln321_71_fu_896_p2;
wire   [0:0] and_ln321_209_fu_902_p2;
wire   [0:0] icmp_ln321_72_fu_914_p2;
wire   [0:0] and_ln321_210_fu_920_p2;
wire   [0:0] icmp_ln321_73_fu_932_p2;
wire   [0:0] and_ln321_211_fu_938_p2;
wire   [0:0] icmp_ln321_74_fu_950_p2;
wire   [0:0] and_ln321_212_fu_956_p2;
wire   [0:0] and_ln321_208_fu_890_p2;
wire   [0:0] xor_ln321_65_fu_968_p2;
wire   [0:0] icmp_ln321_69_fu_878_p2;
wire   [0:0] xor_ln321_61_fu_908_p2;
wire   [0:0] xor_ln321_62_fu_926_p2;
wire   [0:0] xor_ln321_63_fu_944_p2;
wire   [0:0] xor_ln321_64_fu_962_p2;
wire   [0:0] and_ln321_215_fu_986_p2;
wire   [0:0] and_ln321_214_fu_980_p2;
wire   [0:0] and_ln321_216_fu_992_p2;
wire   [0:0] and_ln321_213_fu_974_p2;
wire   [0:0] icmp_ln321_75_fu_1004_p2;
wire   [0:0] and_ln321_218_fu_1010_p2;
wire   [0:0] and_ln321_221_fu_1028_p2;
wire   [0:0] and_ln321_220_fu_1022_p2;
wire   [0:0] and_ln321_223_fu_1040_p2;
wire   [0:0] icmp_ln321_77_fu_1070_p2;
wire   [0:0] icmp_ln321_78_fu_1082_p2;
wire   [0:0] and_ln321_228_fu_1088_p2;
wire   [0:0] icmp_ln321_79_fu_1100_p2;
wire   [0:0] and_ln321_229_fu_1106_p2;
wire   [0:0] icmp_ln321_80_fu_1118_p2;
wire   [0:0] and_ln321_230_fu_1124_p2;
wire   [0:0] icmp_ln321_81_fu_1136_p2;
wire   [0:0] and_ln321_231_fu_1142_p2;
wire   [0:0] and_ln321_227_fu_1076_p2;
wire   [0:0] xor_ln321_70_fu_1154_p2;
wire   [0:0] icmp_ln321_76_fu_1064_p2;
wire   [0:0] xor_ln321_66_fu_1094_p2;
wire   [0:0] xor_ln321_67_fu_1112_p2;
wire   [0:0] xor_ln321_68_fu_1130_p2;
wire   [0:0] xor_ln321_69_fu_1148_p2;
wire   [0:0] and_ln321_234_fu_1172_p2;
wire   [0:0] and_ln321_233_fu_1166_p2;
wire   [0:0] and_ln321_235_fu_1178_p2;
wire   [0:0] and_ln321_232_fu_1160_p2;
wire   [0:0] icmp_ln321_82_fu_1190_p2;
wire   [0:0] and_ln321_237_fu_1196_p2;
wire   [0:0] and_ln321_240_fu_1214_p2;
wire   [0:0] and_ln321_239_fu_1208_p2;
wire   [0:0] and_ln321_242_fu_1226_p2;
wire   [0:0] icmp_ln321_84_fu_1256_p2;
wire   [0:0] icmp_ln321_85_fu_1268_p2;
wire   [0:0] and_ln321_247_fu_1274_p2;
wire   [0:0] icmp_ln321_86_fu_1286_p2;
wire   [0:0] and_ln321_248_fu_1292_p2;
wire   [0:0] icmp_ln321_87_fu_1304_p2;
wire   [0:0] and_ln321_249_fu_1310_p2;
wire   [0:0] icmp_ln321_88_fu_1322_p2;
wire   [0:0] and_ln321_250_fu_1328_p2;
wire   [0:0] and_ln321_246_fu_1262_p2;
wire   [0:0] xor_ln321_75_fu_1340_p2;
wire   [0:0] icmp_ln321_83_fu_1250_p2;
wire   [0:0] xor_ln321_71_fu_1280_p2;
wire   [0:0] xor_ln321_72_fu_1298_p2;
wire   [0:0] xor_ln321_73_fu_1316_p2;
wire   [0:0] xor_ln321_74_fu_1334_p2;
wire   [0:0] and_ln321_253_fu_1358_p2;
wire   [0:0] and_ln321_252_fu_1352_p2;
wire   [0:0] and_ln321_254_fu_1364_p2;
wire   [0:0] and_ln321_251_fu_1346_p2;
wire   [0:0] and_ln321_160_fu_440_p2;
wire   [0:0] and_ln321_179_fu_626_p2;
wire   [0:0] or_ln321_fu_1376_p2;
wire   [0:0] and_ln321_141_fu_254_p2;
wire   [0:0] and_ln321_198_fu_812_p2;
wire   [0:0] and_ln321_217_fu_998_p2;
wire   [0:0] and_ln321_236_fu_1184_p2;
wire   [0:0] and_ln321_255_fu_1370_p2;
wire   [0:0] or_ln321_44_fu_1394_p2;
wire   [0:0] or_ln321_43_fu_1388_p2;
wire   [0:0] or_ln321_45_fu_1400_p2;
wire   [0:0] or_ln321_42_fu_1382_p2;
wire   [0:0] icmp_ln321_89_fu_1412_p2;
wire   [0:0] and_ln321_256_fu_1418_p2;
wire   [0:0] and_ln321_162_fu_458_p2;
wire   [0:0] and_ln321_181_fu_644_p2;
wire   [0:0] or_ln321_47_fu_1430_p2;
wire   [0:0] and_ln321_143_fu_272_p2;
wire   [0:0] and_ln321_200_fu_830_p2;
wire   [0:0] and_ln321_219_fu_1016_p2;
wire   [0:0] and_ln321_238_fu_1202_p2;
wire   [0:0] and_ln321_257_fu_1424_p2;
wire   [0:0] or_ln321_50_fu_1448_p2;
wire   [0:0] or_ln321_49_fu_1442_p2;
wire   [0:0] or_ln321_51_fu_1454_p2;
wire   [0:0] or_ln321_48_fu_1436_p2;
wire   [0:0] and_ln321_259_fu_1472_p2;
wire   [0:0] and_ln321_258_fu_1466_p2;
wire   [0:0] and_ln321_165_fu_476_p2;
wire   [0:0] and_ln321_184_fu_662_p2;
wire   [0:0] or_ln321_53_fu_1484_p2;
wire   [0:0] and_ln321_146_fu_290_p2;
wire   [0:0] and_ln321_203_fu_848_p2;
wire   [0:0] and_ln321_222_fu_1034_p2;
wire   [0:0] and_ln321_241_fu_1220_p2;
wire   [0:0] and_ln321_260_fu_1478_p2;
wire   [0:0] or_ln321_56_fu_1502_p2;
wire   [0:0] or_ln321_55_fu_1496_p2;
wire   [0:0] or_ln321_57_fu_1508_p2;
wire   [0:0] or_ln321_54_fu_1490_p2;
wire   [0:0] and_ln321_261_fu_1520_p2;
wire   [0:0] and_ln321_167_fu_488_p2;
wire   [0:0] and_ln321_186_fu_674_p2;
wire   [0:0] or_ln321_59_fu_1532_p2;
wire   [0:0] and_ln321_148_fu_302_p2;
wire   [0:0] and_ln321_205_fu_860_p2;
wire   [0:0] and_ln321_224_fu_1046_p2;
wire   [0:0] and_ln321_243_fu_1232_p2;
wire   [0:0] and_ln321_262_fu_1526_p2;
wire   [0:0] or_ln321_62_fu_1550_p2;
wire   [0:0] or_ln321_61_fu_1544_p2;
wire   [0:0] or_ln321_63_fu_1556_p2;
wire   [0:0] or_ln321_60_fu_1538_p2;
wire   [0:0] and_ln321_168_fu_494_p2;
wire   [0:0] and_ln321_187_fu_680_p2;
wire   [0:0] or_ln321_65_fu_1574_p2;
wire   [0:0] and_ln321_149_fu_308_p2;
wire   [0:0] and_ln321_206_fu_866_p2;
wire   [0:0] and_ln321_225_fu_1052_p2;
wire   [0:0] and_ln321_244_fu_1238_p2;
wire   [0:0] and_ln321_263_fu_1568_p2;
wire   [0:0] or_ln321_68_fu_1592_p2;
wire   [0:0] or_ln321_67_fu_1586_p2;
wire   [0:0] or_ln321_69_fu_1598_p2;
wire   [0:0] or_ln321_66_fu_1580_p2;
wire   [0:0] and_ln321_169_fu_500_p2;
wire   [0:0] and_ln321_188_fu_686_p2;
wire   [0:0] or_ln321_71_fu_1616_p2;
wire   [0:0] and_ln321_150_fu_314_p2;
wire   [0:0] and_ln321_207_fu_872_p2;
wire   [0:0] and_ln321_226_fu_1058_p2;
wire   [0:0] and_ln321_245_fu_1244_p2;
wire   [0:0] and_ln321_264_fu_1610_p2;
wire   [0:0] or_ln321_74_fu_1634_p2;
wire   [0:0] or_ln321_73_fu_1628_p2;
wire   [0:0] or_ln321_75_fu_1640_p2;
wire   [0:0] or_ln321_72_fu_1622_p2;
wire   [0:0] or_ln321_77_fu_1652_p2;
wire   [0:0] or_ln321_80_fu_1670_p2;
wire   [0:0] or_ln321_79_fu_1664_p2;
wire   [0:0] or_ln321_81_fu_1676_p2;
wire   [0:0] or_ln321_78_fu_1658_p2;
wire   [0:0] or_ln321_82_fu_1682_p2;
wire   [0:0] or_ln321_76_fu_1646_p2;
wire   [1:0] select_ln700_fu_1692_p3;
wire   [1:0] zext_ln125_fu_1688_p1;
wire   [1:0] select_ln125_fu_1700_p3;
wire   [0:0] or_ln321_70_fu_1604_p2;
wire   [1:0] add_ln700_2_fu_1708_p2;
wire   [2:0] zext_ln125_1_fu_1722_p1;
wire   [2:0] add_ln700_3_fu_1725_p2;
wire   [2:0] select_ln125_2_fu_1731_p3;
wire   [2:0] add_ln700_4_fu_1738_p2;
wire   [2:0] select_ln125_3_fu_1744_p3;
wire   [2:0] add_ln700_5_fu_1751_p2;
wire   [2:0] add_ln700_6_fu_1764_p2;
wire   [2:0] select_ln125_5_fu_1769_p3;
reg    ap_ce_reg;
reg   [2:0] stubs_0_layer_V_read_int_reg;
reg   [2:0] stubs_1_layer_V_read_int_reg;
reg   [2:0] stubs_2_layer_V_read_int_reg;
reg   [2:0] stubs_3_layer_V_read_int_reg;
reg   [2:0] stubs_4_layer_V_read_int_reg;
reg   [2:0] stubs_5_layer_V_read_int_reg;
reg   [2:0] stubs_6_layer_V_read_int_reg;
reg   [0:0] stubs_0_valid_V_read_int_reg;
reg   [0:0] stubs_1_valid_V_read_int_reg;
reg   [0:0] stubs_2_valid_V_read_int_reg;
reg   [0:0] stubs_3_valid_V_read_int_reg;
reg   [0:0] stubs_4_valid_V_read_int_reg;
reg   [0:0] stubs_5_valid_V_read_int_reg;
reg   [0:0] stubs_6_valid_V_read_int_reg;
reg   [2:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln125_5_fu_1769_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        or_ln321_46_reg_1775 <= or_ln321_46_fu_1406_p2;
        or_ln321_46_reg_1775_pp0_iter1_reg <= or_ln321_46_reg_1775;
        or_ln321_52_reg_1780 <= or_ln321_52_fu_1460_p2;
        or_ln321_58_reg_1785 <= or_ln321_58_fu_1514_p2;
        or_ln321_64_reg_1790 <= or_ln321_64_fu_1562_p2;
        select_ln125_1_reg_1795 <= select_ln125_1_fu_1714_p3;
        select_ln125_4_reg_1800 <= select_ln125_4_fu_1757_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        stubs_0_layer_V_read_int_reg <= stubs_0_layer_V_read;
        stubs_0_valid_V_read_int_reg <= stubs_0_valid_V_read;
        stubs_1_layer_V_read_int_reg <= stubs_1_layer_V_read;
        stubs_1_valid_V_read_int_reg <= stubs_1_valid_V_read;
        stubs_2_layer_V_read_int_reg <= stubs_2_layer_V_read;
        stubs_2_valid_V_read_int_reg <= stubs_2_valid_V_read;
        stubs_3_layer_V_read_int_reg <= stubs_3_layer_V_read;
        stubs_3_valid_V_read_int_reg <= stubs_3_valid_V_read;
        stubs_4_layer_V_read_int_reg <= stubs_4_layer_V_read;
        stubs_4_valid_V_read_int_reg <= stubs_4_valid_V_read;
        stubs_5_layer_V_read_int_reg <= stubs_5_layer_V_read;
        stubs_5_valid_V_read_int_reg <= stubs_5_valid_V_read;
        stubs_6_layer_V_read_int_reg <= stubs_6_layer_V_read;
        stubs_6_valid_V_read_int_reg <= stubs_6_valid_V_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln125_5_fu_1769_p3;
    end
end

assign add_ln700_2_fu_1708_p2 = (select_ln125_fu_1700_p3 + 2'd1);

assign add_ln700_3_fu_1725_p2 = (zext_ln125_1_fu_1722_p1 + 3'd1);

assign add_ln700_4_fu_1738_p2 = (select_ln125_2_fu_1731_p3 + 3'd1);

assign add_ln700_5_fu_1751_p2 = (select_ln125_3_fu_1744_p3 + 3'd1);

assign add_ln700_6_fu_1764_p2 = (select_ln125_4_reg_1800 + 3'd1);

assign and_ln321_133_fu_158_p2 = (stubs_0_valid_V_read_int_reg & icmp_ln321_43_fu_152_p2);

assign and_ln321_134_fu_176_p2 = (stubs_0_valid_V_read_int_reg & icmp_ln321_44_fu_170_p2);

assign and_ln321_135_fu_194_p2 = (stubs_0_valid_V_read_int_reg & icmp_ln321_45_fu_188_p2);

assign and_ln321_136_fu_212_p2 = (stubs_0_valid_V_read_int_reg & icmp_ln321_46_fu_206_p2);

assign and_ln321_137_fu_230_p2 = (xor_ln321_45_fu_224_p2 & icmp_ln321_fu_134_p2);

assign and_ln321_138_fu_236_p2 = (xor_ln321_fu_164_p2 & xor_ln321_42_fu_182_p2);

assign and_ln321_139_fu_242_p2 = (xor_ln321_44_fu_218_p2 & xor_ln321_43_fu_200_p2);

assign and_ln321_140_fu_248_p2 = (and_ln321_139_fu_242_p2 & and_ln321_138_fu_236_p2);

assign and_ln321_141_fu_254_p2 = (and_ln321_140_fu_248_p2 & and_ln321_137_fu_230_p2);

assign and_ln321_142_fu_266_p2 = (xor_ln321_45_fu_224_p2 & icmp_ln321_47_fu_260_p2);

assign and_ln321_143_fu_272_p2 = (and_ln321_142_fu_266_p2 & and_ln321_140_fu_248_p2);

assign and_ln321_144_fu_278_p2 = (xor_ln321_fu_164_p2 & and_ln321_fu_146_p2);

assign and_ln321_145_fu_284_p2 = (xor_ln321_42_fu_182_p2 & and_ln321_139_fu_242_p2);

assign and_ln321_146_fu_290_p2 = (and_ln321_145_fu_284_p2 & and_ln321_144_fu_278_p2);

assign and_ln321_147_fu_296_p2 = (xor_ln321_42_fu_182_p2 & and_ln321_133_fu_158_p2);

assign and_ln321_148_fu_302_p2 = (and_ln321_147_fu_296_p2 & and_ln321_139_fu_242_p2);

assign and_ln321_149_fu_308_p2 = (and_ln321_139_fu_242_p2 & and_ln321_134_fu_176_p2);

assign and_ln321_150_fu_314_p2 = (xor_ln321_44_fu_218_p2 & and_ln321_135_fu_194_p2);

assign and_ln321_151_fu_332_p2 = (stubs_1_valid_V_read_int_reg & icmp_ln321_49_fu_326_p2);

assign and_ln321_152_fu_344_p2 = (stubs_1_valid_V_read_int_reg & icmp_ln321_50_fu_338_p2);

assign and_ln321_153_fu_362_p2 = (stubs_1_valid_V_read_int_reg & icmp_ln321_51_fu_356_p2);

assign and_ln321_154_fu_380_p2 = (stubs_1_valid_V_read_int_reg & icmp_ln321_52_fu_374_p2);

assign and_ln321_155_fu_398_p2 = (stubs_1_valid_V_read_int_reg & icmp_ln321_53_fu_392_p2);

assign and_ln321_156_fu_416_p2 = (xor_ln321_50_fu_410_p2 & icmp_ln321_48_fu_320_p2);

assign and_ln321_157_fu_422_p2 = (xor_ln321_47_fu_368_p2 & xor_ln321_46_fu_350_p2);

assign and_ln321_158_fu_428_p2 = (xor_ln321_49_fu_404_p2 & xor_ln321_48_fu_386_p2);

assign and_ln321_159_fu_434_p2 = (and_ln321_158_fu_428_p2 & and_ln321_157_fu_422_p2);

assign and_ln321_160_fu_440_p2 = (and_ln321_159_fu_434_p2 & and_ln321_156_fu_416_p2);

assign and_ln321_161_fu_452_p2 = (xor_ln321_50_fu_410_p2 & icmp_ln321_54_fu_446_p2);

assign and_ln321_162_fu_458_p2 = (and_ln321_161_fu_452_p2 & and_ln321_159_fu_434_p2);

assign and_ln321_163_fu_464_p2 = (xor_ln321_46_fu_350_p2 & and_ln321_151_fu_332_p2);

assign and_ln321_164_fu_470_p2 = (xor_ln321_47_fu_368_p2 & and_ln321_158_fu_428_p2);

assign and_ln321_165_fu_476_p2 = (and_ln321_164_fu_470_p2 & and_ln321_163_fu_464_p2);

assign and_ln321_166_fu_482_p2 = (xor_ln321_47_fu_368_p2 & and_ln321_152_fu_344_p2);

assign and_ln321_167_fu_488_p2 = (and_ln321_166_fu_482_p2 & and_ln321_158_fu_428_p2);

assign and_ln321_168_fu_494_p2 = (and_ln321_158_fu_428_p2 & and_ln321_153_fu_362_p2);

assign and_ln321_169_fu_500_p2 = (xor_ln321_49_fu_404_p2 & and_ln321_154_fu_380_p2);

assign and_ln321_170_fu_518_p2 = (stubs_2_valid_V_read_int_reg & icmp_ln321_56_fu_512_p2);

assign and_ln321_171_fu_530_p2 = (stubs_2_valid_V_read_int_reg & icmp_ln321_57_fu_524_p2);

assign and_ln321_172_fu_548_p2 = (stubs_2_valid_V_read_int_reg & icmp_ln321_58_fu_542_p2);

assign and_ln321_173_fu_566_p2 = (stubs_2_valid_V_read_int_reg & icmp_ln321_59_fu_560_p2);

assign and_ln321_174_fu_584_p2 = (stubs_2_valid_V_read_int_reg & icmp_ln321_60_fu_578_p2);

assign and_ln321_175_fu_602_p2 = (xor_ln321_55_fu_596_p2 & icmp_ln321_55_fu_506_p2);

assign and_ln321_176_fu_608_p2 = (xor_ln321_52_fu_554_p2 & xor_ln321_51_fu_536_p2);

assign and_ln321_177_fu_614_p2 = (xor_ln321_54_fu_590_p2 & xor_ln321_53_fu_572_p2);

assign and_ln321_178_fu_620_p2 = (and_ln321_177_fu_614_p2 & and_ln321_176_fu_608_p2);

assign and_ln321_179_fu_626_p2 = (and_ln321_178_fu_620_p2 & and_ln321_175_fu_602_p2);

assign and_ln321_180_fu_638_p2 = (xor_ln321_55_fu_596_p2 & icmp_ln321_61_fu_632_p2);

assign and_ln321_181_fu_644_p2 = (and_ln321_180_fu_638_p2 & and_ln321_178_fu_620_p2);

assign and_ln321_182_fu_650_p2 = (xor_ln321_51_fu_536_p2 & and_ln321_170_fu_518_p2);

assign and_ln321_183_fu_656_p2 = (xor_ln321_52_fu_554_p2 & and_ln321_177_fu_614_p2);

assign and_ln321_184_fu_662_p2 = (and_ln321_183_fu_656_p2 & and_ln321_182_fu_650_p2);

assign and_ln321_185_fu_668_p2 = (xor_ln321_52_fu_554_p2 & and_ln321_171_fu_530_p2);

assign and_ln321_186_fu_674_p2 = (and_ln321_185_fu_668_p2 & and_ln321_177_fu_614_p2);

assign and_ln321_187_fu_680_p2 = (and_ln321_177_fu_614_p2 & and_ln321_172_fu_548_p2);

assign and_ln321_188_fu_686_p2 = (xor_ln321_54_fu_590_p2 & and_ln321_173_fu_566_p2);

assign and_ln321_189_fu_704_p2 = (stubs_3_valid_V_read_int_reg & icmp_ln321_63_fu_698_p2);

assign and_ln321_190_fu_716_p2 = (stubs_3_valid_V_read_int_reg & icmp_ln321_64_fu_710_p2);

assign and_ln321_191_fu_734_p2 = (stubs_3_valid_V_read_int_reg & icmp_ln321_65_fu_728_p2);

assign and_ln321_192_fu_752_p2 = (stubs_3_valid_V_read_int_reg & icmp_ln321_66_fu_746_p2);

assign and_ln321_193_fu_770_p2 = (stubs_3_valid_V_read_int_reg & icmp_ln321_67_fu_764_p2);

assign and_ln321_194_fu_788_p2 = (xor_ln321_60_fu_782_p2 & icmp_ln321_62_fu_692_p2);

assign and_ln321_195_fu_794_p2 = (xor_ln321_57_fu_740_p2 & xor_ln321_56_fu_722_p2);

assign and_ln321_196_fu_800_p2 = (xor_ln321_59_fu_776_p2 & xor_ln321_58_fu_758_p2);

assign and_ln321_197_fu_806_p2 = (and_ln321_196_fu_800_p2 & and_ln321_195_fu_794_p2);

assign and_ln321_198_fu_812_p2 = (and_ln321_197_fu_806_p2 & and_ln321_194_fu_788_p2);

assign and_ln321_199_fu_824_p2 = (xor_ln321_60_fu_782_p2 & icmp_ln321_68_fu_818_p2);

assign and_ln321_200_fu_830_p2 = (and_ln321_199_fu_824_p2 & and_ln321_197_fu_806_p2);

assign and_ln321_201_fu_836_p2 = (xor_ln321_56_fu_722_p2 & and_ln321_189_fu_704_p2);

assign and_ln321_202_fu_842_p2 = (xor_ln321_57_fu_740_p2 & and_ln321_196_fu_800_p2);

assign and_ln321_203_fu_848_p2 = (and_ln321_202_fu_842_p2 & and_ln321_201_fu_836_p2);

assign and_ln321_204_fu_854_p2 = (xor_ln321_57_fu_740_p2 & and_ln321_190_fu_716_p2);

assign and_ln321_205_fu_860_p2 = (and_ln321_204_fu_854_p2 & and_ln321_196_fu_800_p2);

assign and_ln321_206_fu_866_p2 = (and_ln321_196_fu_800_p2 & and_ln321_191_fu_734_p2);

assign and_ln321_207_fu_872_p2 = (xor_ln321_59_fu_776_p2 & and_ln321_192_fu_752_p2);

assign and_ln321_208_fu_890_p2 = (stubs_4_valid_V_read_int_reg & icmp_ln321_70_fu_884_p2);

assign and_ln321_209_fu_902_p2 = (stubs_4_valid_V_read_int_reg & icmp_ln321_71_fu_896_p2);

assign and_ln321_210_fu_920_p2 = (stubs_4_valid_V_read_int_reg & icmp_ln321_72_fu_914_p2);

assign and_ln321_211_fu_938_p2 = (stubs_4_valid_V_read_int_reg & icmp_ln321_73_fu_932_p2);

assign and_ln321_212_fu_956_p2 = (stubs_4_valid_V_read_int_reg & icmp_ln321_74_fu_950_p2);

assign and_ln321_213_fu_974_p2 = (xor_ln321_65_fu_968_p2 & icmp_ln321_69_fu_878_p2);

assign and_ln321_214_fu_980_p2 = (xor_ln321_62_fu_926_p2 & xor_ln321_61_fu_908_p2);

assign and_ln321_215_fu_986_p2 = (xor_ln321_64_fu_962_p2 & xor_ln321_63_fu_944_p2);

assign and_ln321_216_fu_992_p2 = (and_ln321_215_fu_986_p2 & and_ln321_214_fu_980_p2);

assign and_ln321_217_fu_998_p2 = (and_ln321_216_fu_992_p2 & and_ln321_213_fu_974_p2);

assign and_ln321_218_fu_1010_p2 = (xor_ln321_65_fu_968_p2 & icmp_ln321_75_fu_1004_p2);

assign and_ln321_219_fu_1016_p2 = (and_ln321_218_fu_1010_p2 & and_ln321_216_fu_992_p2);

assign and_ln321_220_fu_1022_p2 = (xor_ln321_61_fu_908_p2 & and_ln321_208_fu_890_p2);

assign and_ln321_221_fu_1028_p2 = (xor_ln321_62_fu_926_p2 & and_ln321_215_fu_986_p2);

assign and_ln321_222_fu_1034_p2 = (and_ln321_221_fu_1028_p2 & and_ln321_220_fu_1022_p2);

assign and_ln321_223_fu_1040_p2 = (xor_ln321_62_fu_926_p2 & and_ln321_209_fu_902_p2);

assign and_ln321_224_fu_1046_p2 = (and_ln321_223_fu_1040_p2 & and_ln321_215_fu_986_p2);

assign and_ln321_225_fu_1052_p2 = (and_ln321_215_fu_986_p2 & and_ln321_210_fu_920_p2);

assign and_ln321_226_fu_1058_p2 = (xor_ln321_64_fu_962_p2 & and_ln321_211_fu_938_p2);

assign and_ln321_227_fu_1076_p2 = (stubs_5_valid_V_read_int_reg & icmp_ln321_77_fu_1070_p2);

assign and_ln321_228_fu_1088_p2 = (stubs_5_valid_V_read_int_reg & icmp_ln321_78_fu_1082_p2);

assign and_ln321_229_fu_1106_p2 = (stubs_5_valid_V_read_int_reg & icmp_ln321_79_fu_1100_p2);

assign and_ln321_230_fu_1124_p2 = (stubs_5_valid_V_read_int_reg & icmp_ln321_80_fu_1118_p2);

assign and_ln321_231_fu_1142_p2 = (stubs_5_valid_V_read_int_reg & icmp_ln321_81_fu_1136_p2);

assign and_ln321_232_fu_1160_p2 = (xor_ln321_70_fu_1154_p2 & icmp_ln321_76_fu_1064_p2);

assign and_ln321_233_fu_1166_p2 = (xor_ln321_67_fu_1112_p2 & xor_ln321_66_fu_1094_p2);

assign and_ln321_234_fu_1172_p2 = (xor_ln321_69_fu_1148_p2 & xor_ln321_68_fu_1130_p2);

assign and_ln321_235_fu_1178_p2 = (and_ln321_234_fu_1172_p2 & and_ln321_233_fu_1166_p2);

assign and_ln321_236_fu_1184_p2 = (and_ln321_235_fu_1178_p2 & and_ln321_232_fu_1160_p2);

assign and_ln321_237_fu_1196_p2 = (xor_ln321_70_fu_1154_p2 & icmp_ln321_82_fu_1190_p2);

assign and_ln321_238_fu_1202_p2 = (and_ln321_237_fu_1196_p2 & and_ln321_235_fu_1178_p2);

assign and_ln321_239_fu_1208_p2 = (xor_ln321_66_fu_1094_p2 & and_ln321_227_fu_1076_p2);

assign and_ln321_240_fu_1214_p2 = (xor_ln321_67_fu_1112_p2 & and_ln321_234_fu_1172_p2);

assign and_ln321_241_fu_1220_p2 = (and_ln321_240_fu_1214_p2 & and_ln321_239_fu_1208_p2);

assign and_ln321_242_fu_1226_p2 = (xor_ln321_67_fu_1112_p2 & and_ln321_228_fu_1088_p2);

assign and_ln321_243_fu_1232_p2 = (and_ln321_242_fu_1226_p2 & and_ln321_234_fu_1172_p2);

assign and_ln321_244_fu_1238_p2 = (and_ln321_234_fu_1172_p2 & and_ln321_229_fu_1106_p2);

assign and_ln321_245_fu_1244_p2 = (xor_ln321_69_fu_1148_p2 & and_ln321_230_fu_1124_p2);

assign and_ln321_246_fu_1262_p2 = (stubs_6_valid_V_read_int_reg & icmp_ln321_84_fu_1256_p2);

assign and_ln321_247_fu_1274_p2 = (stubs_6_valid_V_read_int_reg & icmp_ln321_85_fu_1268_p2);

assign and_ln321_248_fu_1292_p2 = (stubs_6_valid_V_read_int_reg & icmp_ln321_86_fu_1286_p2);

assign and_ln321_249_fu_1310_p2 = (stubs_6_valid_V_read_int_reg & icmp_ln321_87_fu_1304_p2);

assign and_ln321_250_fu_1328_p2 = (stubs_6_valid_V_read_int_reg & icmp_ln321_88_fu_1322_p2);

assign and_ln321_251_fu_1346_p2 = (xor_ln321_75_fu_1340_p2 & icmp_ln321_83_fu_1250_p2);

assign and_ln321_252_fu_1352_p2 = (xor_ln321_72_fu_1298_p2 & xor_ln321_71_fu_1280_p2);

assign and_ln321_253_fu_1358_p2 = (xor_ln321_74_fu_1334_p2 & xor_ln321_73_fu_1316_p2);

assign and_ln321_254_fu_1364_p2 = (and_ln321_253_fu_1358_p2 & and_ln321_252_fu_1352_p2);

assign and_ln321_255_fu_1370_p2 = (and_ln321_254_fu_1364_p2 & and_ln321_251_fu_1346_p2);

assign and_ln321_256_fu_1418_p2 = (xor_ln321_75_fu_1340_p2 & icmp_ln321_89_fu_1412_p2);

assign and_ln321_257_fu_1424_p2 = (and_ln321_256_fu_1418_p2 & and_ln321_254_fu_1364_p2);

assign and_ln321_258_fu_1466_p2 = (xor_ln321_71_fu_1280_p2 & and_ln321_246_fu_1262_p2);

assign and_ln321_259_fu_1472_p2 = (xor_ln321_72_fu_1298_p2 & and_ln321_253_fu_1358_p2);

assign and_ln321_260_fu_1478_p2 = (and_ln321_259_fu_1472_p2 & and_ln321_258_fu_1466_p2);

assign and_ln321_261_fu_1520_p2 = (xor_ln321_72_fu_1298_p2 & and_ln321_247_fu_1274_p2);

assign and_ln321_262_fu_1526_p2 = (and_ln321_261_fu_1520_p2 & and_ln321_253_fu_1358_p2);

assign and_ln321_263_fu_1568_p2 = (and_ln321_253_fu_1358_p2 & and_ln321_248_fu_1292_p2);

assign and_ln321_264_fu_1610_p2 = (xor_ln321_74_fu_1334_p2 & and_ln321_249_fu_1310_p2);

assign and_ln321_fu_146_p2 = (stubs_0_valid_V_read_int_reg & icmp_ln321_42_fu_140_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign icmp_ln321_42_fu_140_p2 = ((stubs_0_layer_V_read_int_reg == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_43_fu_152_p2 = ((stubs_0_layer_V_read_int_reg == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_44_fu_170_p2 = ((stubs_0_layer_V_read_int_reg == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_45_fu_188_p2 = ((stubs_0_layer_V_read_int_reg == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_46_fu_206_p2 = ((stubs_0_layer_V_read_int_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_47_fu_260_p2 = ((stubs_0_layer_V_read_int_reg == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_48_fu_320_p2 = ((stubs_1_layer_V_read_int_reg != 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_49_fu_326_p2 = ((stubs_1_layer_V_read_int_reg == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_50_fu_338_p2 = ((stubs_1_layer_V_read_int_reg == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_51_fu_356_p2 = ((stubs_1_layer_V_read_int_reg == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_52_fu_374_p2 = ((stubs_1_layer_V_read_int_reg == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_53_fu_392_p2 = ((stubs_1_layer_V_read_int_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_54_fu_446_p2 = ((stubs_1_layer_V_read_int_reg == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_55_fu_506_p2 = ((stubs_2_layer_V_read_int_reg != 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_56_fu_512_p2 = ((stubs_2_layer_V_read_int_reg == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_57_fu_524_p2 = ((stubs_2_layer_V_read_int_reg == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_58_fu_542_p2 = ((stubs_2_layer_V_read_int_reg == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_59_fu_560_p2 = ((stubs_2_layer_V_read_int_reg == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_60_fu_578_p2 = ((stubs_2_layer_V_read_int_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_61_fu_632_p2 = ((stubs_2_layer_V_read_int_reg == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_62_fu_692_p2 = ((stubs_3_layer_V_read_int_reg != 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_63_fu_698_p2 = ((stubs_3_layer_V_read_int_reg == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_64_fu_710_p2 = ((stubs_3_layer_V_read_int_reg == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_65_fu_728_p2 = ((stubs_3_layer_V_read_int_reg == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_66_fu_746_p2 = ((stubs_3_layer_V_read_int_reg == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_67_fu_764_p2 = ((stubs_3_layer_V_read_int_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_68_fu_818_p2 = ((stubs_3_layer_V_read_int_reg == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_69_fu_878_p2 = ((stubs_4_layer_V_read_int_reg != 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_70_fu_884_p2 = ((stubs_4_layer_V_read_int_reg == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_71_fu_896_p2 = ((stubs_4_layer_V_read_int_reg == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_72_fu_914_p2 = ((stubs_4_layer_V_read_int_reg == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_73_fu_932_p2 = ((stubs_4_layer_V_read_int_reg == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_74_fu_950_p2 = ((stubs_4_layer_V_read_int_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_75_fu_1004_p2 = ((stubs_4_layer_V_read_int_reg == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_76_fu_1064_p2 = ((stubs_5_layer_V_read_int_reg != 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_77_fu_1070_p2 = ((stubs_5_layer_V_read_int_reg == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_78_fu_1082_p2 = ((stubs_5_layer_V_read_int_reg == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_79_fu_1100_p2 = ((stubs_5_layer_V_read_int_reg == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_80_fu_1118_p2 = ((stubs_5_layer_V_read_int_reg == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_81_fu_1136_p2 = ((stubs_5_layer_V_read_int_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_82_fu_1190_p2 = ((stubs_5_layer_V_read_int_reg == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_83_fu_1250_p2 = ((stubs_6_layer_V_read_int_reg != 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_84_fu_1256_p2 = ((stubs_6_layer_V_read_int_reg == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_85_fu_1268_p2 = ((stubs_6_layer_V_read_int_reg == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_86_fu_1286_p2 = ((stubs_6_layer_V_read_int_reg == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_87_fu_1304_p2 = ((stubs_6_layer_V_read_int_reg == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_88_fu_1322_p2 = ((stubs_6_layer_V_read_int_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_89_fu_1412_p2 = ((stubs_6_layer_V_read_int_reg == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_134_p2 = ((stubs_0_layer_V_read_int_reg != 3'd5) ? 1'b1 : 1'b0);

assign or_ln321_42_fu_1382_p2 = (or_ln321_fu_1376_p2 | and_ln321_141_fu_254_p2);

assign or_ln321_43_fu_1388_p2 = (and_ln321_217_fu_998_p2 | and_ln321_198_fu_812_p2);

assign or_ln321_44_fu_1394_p2 = (and_ln321_255_fu_1370_p2 | and_ln321_236_fu_1184_p2);

assign or_ln321_45_fu_1400_p2 = (or_ln321_44_fu_1394_p2 | or_ln321_43_fu_1388_p2);

assign or_ln321_46_fu_1406_p2 = (or_ln321_45_fu_1400_p2 | or_ln321_42_fu_1382_p2);

assign or_ln321_47_fu_1430_p2 = (and_ln321_181_fu_644_p2 | and_ln321_162_fu_458_p2);

assign or_ln321_48_fu_1436_p2 = (or_ln321_47_fu_1430_p2 | and_ln321_143_fu_272_p2);

assign or_ln321_49_fu_1442_p2 = (and_ln321_219_fu_1016_p2 | and_ln321_200_fu_830_p2);

assign or_ln321_50_fu_1448_p2 = (and_ln321_257_fu_1424_p2 | and_ln321_238_fu_1202_p2);

assign or_ln321_51_fu_1454_p2 = (or_ln321_50_fu_1448_p2 | or_ln321_49_fu_1442_p2);

assign or_ln321_52_fu_1460_p2 = (or_ln321_51_fu_1454_p2 | or_ln321_48_fu_1436_p2);

assign or_ln321_53_fu_1484_p2 = (and_ln321_184_fu_662_p2 | and_ln321_165_fu_476_p2);

assign or_ln321_54_fu_1490_p2 = (or_ln321_53_fu_1484_p2 | and_ln321_146_fu_290_p2);

assign or_ln321_55_fu_1496_p2 = (and_ln321_222_fu_1034_p2 | and_ln321_203_fu_848_p2);

assign or_ln321_56_fu_1502_p2 = (and_ln321_260_fu_1478_p2 | and_ln321_241_fu_1220_p2);

assign or_ln321_57_fu_1508_p2 = (or_ln321_56_fu_1502_p2 | or_ln321_55_fu_1496_p2);

assign or_ln321_58_fu_1514_p2 = (or_ln321_57_fu_1508_p2 | or_ln321_54_fu_1490_p2);

assign or_ln321_59_fu_1532_p2 = (and_ln321_186_fu_674_p2 | and_ln321_167_fu_488_p2);

assign or_ln321_60_fu_1538_p2 = (or_ln321_59_fu_1532_p2 | and_ln321_148_fu_302_p2);

assign or_ln321_61_fu_1544_p2 = (and_ln321_224_fu_1046_p2 | and_ln321_205_fu_860_p2);

assign or_ln321_62_fu_1550_p2 = (and_ln321_262_fu_1526_p2 | and_ln321_243_fu_1232_p2);

assign or_ln321_63_fu_1556_p2 = (or_ln321_62_fu_1550_p2 | or_ln321_61_fu_1544_p2);

assign or_ln321_64_fu_1562_p2 = (or_ln321_63_fu_1556_p2 | or_ln321_60_fu_1538_p2);

assign or_ln321_65_fu_1574_p2 = (and_ln321_187_fu_680_p2 | and_ln321_168_fu_494_p2);

assign or_ln321_66_fu_1580_p2 = (or_ln321_65_fu_1574_p2 | and_ln321_149_fu_308_p2);

assign or_ln321_67_fu_1586_p2 = (and_ln321_225_fu_1052_p2 | and_ln321_206_fu_866_p2);

assign or_ln321_68_fu_1592_p2 = (and_ln321_263_fu_1568_p2 | and_ln321_244_fu_1238_p2);

assign or_ln321_69_fu_1598_p2 = (or_ln321_68_fu_1592_p2 | or_ln321_67_fu_1586_p2);

assign or_ln321_70_fu_1604_p2 = (or_ln321_69_fu_1598_p2 | or_ln321_66_fu_1580_p2);

assign or_ln321_71_fu_1616_p2 = (and_ln321_188_fu_686_p2 | and_ln321_169_fu_500_p2);

assign or_ln321_72_fu_1622_p2 = (or_ln321_71_fu_1616_p2 | and_ln321_150_fu_314_p2);

assign or_ln321_73_fu_1628_p2 = (and_ln321_226_fu_1058_p2 | and_ln321_207_fu_872_p2);

assign or_ln321_74_fu_1634_p2 = (and_ln321_264_fu_1610_p2 | and_ln321_245_fu_1244_p2);

assign or_ln321_75_fu_1640_p2 = (or_ln321_74_fu_1634_p2 | or_ln321_73_fu_1628_p2);

assign or_ln321_76_fu_1646_p2 = (or_ln321_75_fu_1640_p2 | or_ln321_72_fu_1622_p2);

assign or_ln321_77_fu_1652_p2 = (and_ln321_231_fu_1142_p2 | and_ln321_193_fu_770_p2);

assign or_ln321_78_fu_1658_p2 = (or_ln321_77_fu_1652_p2 | and_ln321_212_fu_956_p2);

assign or_ln321_79_fu_1664_p2 = (and_ln321_174_fu_584_p2 | and_ln321_155_fu_398_p2);

assign or_ln321_80_fu_1670_p2 = (and_ln321_250_fu_1328_p2 | and_ln321_136_fu_212_p2);

assign or_ln321_81_fu_1676_p2 = (or_ln321_80_fu_1670_p2 | or_ln321_79_fu_1664_p2);

assign or_ln321_82_fu_1682_p2 = (or_ln321_81_fu_1676_p2 | or_ln321_78_fu_1658_p2);

assign or_ln321_fu_1376_p2 = (and_ln321_179_fu_626_p2 | and_ln321_160_fu_440_p2);

assign select_ln125_1_fu_1714_p3 = ((or_ln321_70_fu_1604_p2[0:0] === 1'b1) ? add_ln700_2_fu_1708_p2 : select_ln125_fu_1700_p3);

assign select_ln125_2_fu_1731_p3 = ((or_ln321_64_reg_1790[0:0] === 1'b1) ? add_ln700_3_fu_1725_p2 : zext_ln125_1_fu_1722_p1);

assign select_ln125_3_fu_1744_p3 = ((or_ln321_58_reg_1785[0:0] === 1'b1) ? add_ln700_4_fu_1738_p2 : select_ln125_2_fu_1731_p3);

assign select_ln125_4_fu_1757_p3 = ((or_ln321_52_reg_1780[0:0] === 1'b1) ? add_ln700_5_fu_1751_p2 : select_ln125_3_fu_1744_p3);

assign select_ln125_5_fu_1769_p3 = ((or_ln321_46_reg_1775_pp0_iter1_reg[0:0] === 1'b1) ? add_ln700_6_fu_1764_p2 : select_ln125_4_reg_1800);

assign select_ln125_fu_1700_p3 = ((or_ln321_76_fu_1646_p2[0:0] === 1'b1) ? select_ln700_fu_1692_p3 : zext_ln125_fu_1688_p1);

assign select_ln700_fu_1692_p3 = ((or_ln321_82_fu_1682_p2[0:0] === 1'b1) ? 2'd2 : 2'd1);

assign xor_ln321_42_fu_182_p2 = (1'd1 ^ and_ln321_134_fu_176_p2);

assign xor_ln321_43_fu_200_p2 = (1'd1 ^ and_ln321_135_fu_194_p2);

assign xor_ln321_44_fu_218_p2 = (1'd1 ^ and_ln321_136_fu_212_p2);

assign xor_ln321_45_fu_224_p2 = (stubs_0_valid_V_read_int_reg ^ and_ln321_fu_146_p2);

assign xor_ln321_46_fu_350_p2 = (1'd1 ^ and_ln321_152_fu_344_p2);

assign xor_ln321_47_fu_368_p2 = (1'd1 ^ and_ln321_153_fu_362_p2);

assign xor_ln321_48_fu_386_p2 = (1'd1 ^ and_ln321_154_fu_380_p2);

assign xor_ln321_49_fu_404_p2 = (1'd1 ^ and_ln321_155_fu_398_p2);

assign xor_ln321_50_fu_410_p2 = (stubs_1_valid_V_read_int_reg ^ and_ln321_151_fu_332_p2);

assign xor_ln321_51_fu_536_p2 = (1'd1 ^ and_ln321_171_fu_530_p2);

assign xor_ln321_52_fu_554_p2 = (1'd1 ^ and_ln321_172_fu_548_p2);

assign xor_ln321_53_fu_572_p2 = (1'd1 ^ and_ln321_173_fu_566_p2);

assign xor_ln321_54_fu_590_p2 = (1'd1 ^ and_ln321_174_fu_584_p2);

assign xor_ln321_55_fu_596_p2 = (stubs_2_valid_V_read_int_reg ^ and_ln321_170_fu_518_p2);

assign xor_ln321_56_fu_722_p2 = (1'd1 ^ and_ln321_190_fu_716_p2);

assign xor_ln321_57_fu_740_p2 = (1'd1 ^ and_ln321_191_fu_734_p2);

assign xor_ln321_58_fu_758_p2 = (1'd1 ^ and_ln321_192_fu_752_p2);

assign xor_ln321_59_fu_776_p2 = (1'd1 ^ and_ln321_193_fu_770_p2);

assign xor_ln321_60_fu_782_p2 = (stubs_3_valid_V_read_int_reg ^ and_ln321_189_fu_704_p2);

assign xor_ln321_61_fu_908_p2 = (1'd1 ^ and_ln321_209_fu_902_p2);

assign xor_ln321_62_fu_926_p2 = (1'd1 ^ and_ln321_210_fu_920_p2);

assign xor_ln321_63_fu_944_p2 = (1'd1 ^ and_ln321_211_fu_938_p2);

assign xor_ln321_64_fu_962_p2 = (1'd1 ^ and_ln321_212_fu_956_p2);

assign xor_ln321_65_fu_968_p2 = (stubs_4_valid_V_read_int_reg ^ and_ln321_208_fu_890_p2);

assign xor_ln321_66_fu_1094_p2 = (1'd1 ^ and_ln321_228_fu_1088_p2);

assign xor_ln321_67_fu_1112_p2 = (1'd1 ^ and_ln321_229_fu_1106_p2);

assign xor_ln321_68_fu_1130_p2 = (1'd1 ^ and_ln321_230_fu_1124_p2);

assign xor_ln321_69_fu_1148_p2 = (1'd1 ^ and_ln321_231_fu_1142_p2);

assign xor_ln321_70_fu_1154_p2 = (stubs_5_valid_V_read_int_reg ^ and_ln321_227_fu_1076_p2);

assign xor_ln321_71_fu_1280_p2 = (1'd1 ^ and_ln321_247_fu_1274_p2);

assign xor_ln321_72_fu_1298_p2 = (1'd1 ^ and_ln321_248_fu_1292_p2);

assign xor_ln321_73_fu_1316_p2 = (1'd1 ^ and_ln321_249_fu_1310_p2);

assign xor_ln321_74_fu_1334_p2 = (1'd1 ^ and_ln321_250_fu_1328_p2);

assign xor_ln321_75_fu_1340_p2 = (stubs_6_valid_V_read_int_reg ^ and_ln321_246_fu_1262_p2);

assign xor_ln321_fu_164_p2 = (1'd1 ^ and_ln321_133_fu_158_p2);

assign zext_ln125_1_fu_1722_p1 = select_ln125_1_reg_1795;

assign zext_ln125_fu_1688_p1 = or_ln321_82_fu_1682_p2;

endmodule //countLayersAll
