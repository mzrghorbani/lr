-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity killLargestResid is
port (
    ap_ready : OUT STD_LOGIC;
    LRHLS_largestResid_V_read : IN STD_LOGIC_VECTOR (2 downto 0);
    stubs_0_valid_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    stubs_1_valid_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    stubs_2_valid_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    stubs_3_valid_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    stubs_4_valid_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    stubs_5_valid_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    stubs_6_valid_V_read : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of killLargestResid is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal write_flag_fu_76_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln408_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag4_fu_98_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln408_1_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag8_fu_142_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln408_2_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag2_fu_164_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln408_3_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag5_fu_208_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln408_4_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag3_fu_186_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln408_5_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_flag1_fu_120_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln408_6_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln408_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln408_1_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln408_2_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln408_3_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln408_4_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln408_5_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln408_6_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);

    component LRHLS_top_mux_83_1_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (0 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    LRHLS_top_mux_83_1_1_1_U312 : component LRHLS_top_mux_83_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_1,
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_0,
        din3 => ap_const_lv1_0,
        din4 => ap_const_lv1_0,
        din5 => ap_const_lv1_0,
        din6 => ap_const_lv1_0,
        din7 => ap_const_lv1_0,
        din8 => LRHLS_largestResid_V_read,
        dout => write_flag_fu_76_p10);

    LRHLS_top_mux_83_1_1_1_U313 : component LRHLS_top_mux_83_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_0,
        din3 => ap_const_lv1_0,
        din4 => ap_const_lv1_0,
        din5 => ap_const_lv1_0,
        din6 => ap_const_lv1_0,
        din7 => ap_const_lv1_0,
        din8 => LRHLS_largestResid_V_read,
        dout => write_flag4_fu_98_p10);

    LRHLS_top_mux_83_1_1_1_U314 : component LRHLS_top_mux_83_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_0,
        din3 => ap_const_lv1_0,
        din4 => ap_const_lv1_0,
        din5 => ap_const_lv1_0,
        din6 => ap_const_lv1_1,
        din7 => ap_const_lv1_1,
        din8 => LRHLS_largestResid_V_read,
        dout => write_flag1_fu_120_p10);

    LRHLS_top_mux_83_1_1_1_U315 : component LRHLS_top_mux_83_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_0,
        din4 => ap_const_lv1_0,
        din5 => ap_const_lv1_0,
        din6 => ap_const_lv1_0,
        din7 => ap_const_lv1_0,
        din8 => LRHLS_largestResid_V_read,
        dout => write_flag8_fu_142_p10);

    LRHLS_top_mux_83_1_1_1_U316 : component LRHLS_top_mux_83_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_0,
        din3 => ap_const_lv1_1,
        din4 => ap_const_lv1_0,
        din5 => ap_const_lv1_0,
        din6 => ap_const_lv1_0,
        din7 => ap_const_lv1_0,
        din8 => LRHLS_largestResid_V_read,
        dout => write_flag2_fu_164_p10);

    LRHLS_top_mux_83_1_1_1_U317 : component LRHLS_top_mux_83_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_0,
        din3 => ap_const_lv1_0,
        din4 => ap_const_lv1_0,
        din5 => ap_const_lv1_1,
        din6 => ap_const_lv1_0,
        din7 => ap_const_lv1_0,
        din8 => LRHLS_largestResid_V_read,
        dout => write_flag3_fu_186_p10);

    LRHLS_top_mux_83_1_1_1_U318 : component LRHLS_top_mux_83_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_0,
        din3 => ap_const_lv1_0,
        din4 => ap_const_lv1_1,
        din5 => ap_const_lv1_0,
        din6 => ap_const_lv1_0,
        din7 => ap_const_lv1_0,
        din8 => LRHLS_largestResid_V_read,
        dout => write_flag5_fu_208_p10);




    and_ln408_1_fu_248_p2 <= (xor_ln408_1_fu_242_p2 and stubs_1_valid_V_read);
    and_ln408_2_fu_260_p2 <= (xor_ln408_2_fu_254_p2 and stubs_2_valid_V_read);
    and_ln408_3_fu_272_p2 <= (xor_ln408_3_fu_266_p2 and stubs_3_valid_V_read);
    and_ln408_4_fu_284_p2 <= (xor_ln408_4_fu_278_p2 and stubs_4_valid_V_read);
    and_ln408_5_fu_296_p2 <= (xor_ln408_5_fu_290_p2 and stubs_5_valid_V_read);
    and_ln408_6_fu_308_p2 <= (xor_ln408_6_fu_302_p2 and stubs_6_valid_V_read);
    and_ln408_fu_236_p2 <= (xor_ln408_fu_230_p2 and stubs_0_valid_V_read);
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= and_ln408_fu_236_p2;
    ap_return_1 <= and_ln408_1_fu_248_p2;
    ap_return_2 <= and_ln408_2_fu_260_p2;
    ap_return_3 <= and_ln408_3_fu_272_p2;
    ap_return_4 <= and_ln408_4_fu_284_p2;
    ap_return_5 <= and_ln408_5_fu_296_p2;
    ap_return_6 <= and_ln408_6_fu_308_p2;
    xor_ln408_1_fu_242_p2 <= (write_flag4_fu_98_p10 xor ap_const_lv1_1);
    xor_ln408_2_fu_254_p2 <= (write_flag8_fu_142_p10 xor ap_const_lv1_1);
    xor_ln408_3_fu_266_p2 <= (write_flag2_fu_164_p10 xor ap_const_lv1_1);
    xor_ln408_4_fu_278_p2 <= (write_flag5_fu_208_p10 xor ap_const_lv1_1);
    xor_ln408_5_fu_290_p2 <= (write_flag3_fu_186_p10 xor ap_const_lv1_1);
    xor_ln408_6_fu_302_p2 <= (write_flag1_fu_120_p10 xor ap_const_lv1_1);
    xor_ln408_fu_230_p2 <= (write_flag_fu_76_p10 xor ap_const_lv1_1);
end behav;
